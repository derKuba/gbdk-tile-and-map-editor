import{r as s,h as i,H as e}from"./p-c3c108e6.js";const n=class{constructor(i){s(this,i),this.mapColorCodeToColour=s=>["white","grey","grey-dark","black"][s],this.handleClick=()=>{this.setSelectedTile(this.position)}}render(){const s=this.field.map((s,e)=>i("div",{class:"matrixRow",key:"index_"+e},s.map((s,n)=>i("div",{onClick:this.handleClick,class:"field gb-"+this.mapColorCodeToColour(s),key:`index_${e}_${n}`}))));return i("div",{class:"field-box "+(!0===this.isActive?"active":"")},s)}};n.style=".field-box{display:-ms-inline-flexbox;display:inline-flex;border:1px solid black}";const t=class{constructor(i){s(this,i),this.handleClick=()=>{this.navigateTo()},this.convertArrayToGbdkCompatibelString=s=>s.map(s=>(s=>{let i="";return s.map((e,n)=>{i+=(s=>{const i={0:[0,0],1:[1,0],2:[0,1],3:[1,1]};let e=[],n=[],t="",o="";return s.map(s=>{e.push(i[s][0]),n.push(i[s][1]),e.length%4==0&&n.length%4==0&&(t+=parseInt(e.join(""),2).toString(16).toUpperCase(),o+=parseInt(n.join(""),2).toString(16).toUpperCase(),e=[],n=[])}),["0x"+t,"0x"+o]})(e).join(", "),n<s.length-1&&(i+=", ")}),i})(s)),this.createDownload=(s,i)=>{const e=document.createElement("a"),n=new Blob([s],{type:"application/octet-stream"});e.href=window.URL.createObjectURL(n),e.download=i,e.click()},this.downLoadFiles=s=>{this.createDownload(s.main,"Sprites.c"),this.createDownload(s.header,"Sprites.h")}}render(){const s=this.convertArrayToGbdkCompatibelString(this.fields),e=(s=>({main:`<span class="intro">// main.c <br/> </span><span class="un">unsigned</span> <span class="char">char</span> <span class="clazz">TileTable </span><span class="arr">[ ]</span> = { <br/> <div class="code">${s.join().replace(/(?:[^,]+,){8}/g,"$&<br/>")}</div>  <br/> };`,header:'<span class="intro">// main.h <br/></span> <span class="un">#define SpriteBank 0</span><br/><br/> <span class="un">extern unsigned char</span> <span class="clazz">TileTable </span><span class="arr">[ ]</span>;'}))(s),n=(s=>({main:`unsigned char Sprites[] = { \n ${s} \n }`,header:"#define SpriteBank 0 \n extern unsigned char Sprites [];"}))(s);return i("div",null,i("h1",null,"Code Output"),i("div",{class:"codeblock"},i("div",{innerHTML:e.main})),i("hr",null),i("div",{class:"codeblock"},i("div",{innerHTML:e.header})),i("hr",null),i("div",{class:"buttonLine"},i("button",{onClick:this.handleClick,class:"secondary"}," ","Back"," "),i("button",{onClick:()=>this.downLoadFiles(n),class:"primary"}," ","Save as File"," ")))}};t.style=".codeblock{background-color:#2d2d2d;color:white;padding:15px}.un{color:#F012BE;font-style:italic}.char{color:#F012BE;font-style:italic}.clazz{color:#3D9970}.arr{color:white}.intro{display:block;color:#c0c0c0;font-size:12px;font-style:italic;margin-bottom:15px}.code{margin:20px 0 0 20px}.buttonLine{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}button{border:none;padding:15px 32px;text-align:center;text-decoration:none;display:inline-block;font-size:16px}button.primary{background-color:#4CAF50;color:white}button.secondary{background-color:#c0c0c0;color:black}";const o=class{constructor(i){s(this,i),this.handleButtonClick=()=>{0!==this.selectedFields.length&&this.navigateTo()}}render(){const s=this.matrix.map((s,e)=>i("mvjp-export-checkbox-field",{field:[...s],position:e,isActive:this.selectedFields.includes(e),setSelectedTile:this.handleTileClick,key:"checkbox_id_"+e}));return i(e,null,i("div",{class:"fields"},s),i("button",{onClick:this.handleButtonClick}," Export "))}};o.style=":host{display:block}.field-box{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;border:1px solid black;margin:0 0 25px 15px}.field-box.active{border:5px solid #33ccff;width:40px;height:40px}.matrixRow{display:-ms-inline-flexbox;display:inline-flex}.field{display:-ms-inline-flexbox;display:inline-flex;width:5px;height:5px}.gb-green{background-color:#6b790e}.gb-grey{background-color:#c5bfbf}.gb-grey-dark{background-color:#5a5760}.gb-white{background-color:#fff}.gb-black{background-color:#000}";export{n as mvjp_export_checkbox_field,t as mvjp_export_code_output,o as mvjp_export_field_selector}